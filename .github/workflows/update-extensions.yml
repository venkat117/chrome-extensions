name: Update Extension Data

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Clone chrome-extension-manifests-dataset
      run: git clone https://github.com/palant/chrome-extension-manifests-dataset.git
    - name: Install dependencies
      run: |
        cd chrome-extension-manifests-dataset
        npm install
    - name: Run query and update data
      run: |
        cd chrome-extension-manifests-dataset
        node query.js -o "id, metadata.name, metadata.user_count, metadata.rating, manifest.version" true > raw_data.txt
        node -e '
          const fs = require("fs");
          const data = fs.readFileSync("raw_data.txt", "utf8").split("\n").filter(Boolean);
          
          // Create CSV header
          const header = ["extension_id", "name", "user_count", "rating", "version"];
          const csvData = [];
          
          // Add the header row
          csvData.push(header.join(","));
          
          // Map the data to CSV rows
          data.forEach(line => {
            // Split by spaces, but only consider non-empty values for each field
            const fields = line.split(/\s+/); // Regex to handle multiple spaces

            // Ensure that each field has a valid value; if not, set as empty string
            const [id = "", name = "", user_count = "", rating = "", version = ""] = fields;

            // Join fields with commas and add to CSV data
            csvData.push([id, name, user_count, rating, version].join(","));
          });
          
          // Write CSV to file
          fs.writeFileSync("../extension_data.csv", csvData.join("\n"));
        '
    - name: Commit and push if changed
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add -A  # Stage all changes, including new and modified files
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update extension data")
        git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git
      env:
        PAT: ${{ secrets.PAT }}
