name: Update Extension Data

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Clone chrome-extension-manifests-dataset
      run: git clone https://github.com/palant/chrome-extension-manifests-dataset.git
    - name: Install dependencies
      run: |
        cd chrome-extension-manifests-dataset
        npm install
    - name: Run query and update data
      run: |
        cd chrome-extension-manifests-dataset
        node query.js -o "id, metadata.name, metadata.user_count, metadata.rating, manifest.version" true > raw_data.txt
        node -e '
          const fs = require("fs");
          const data = fs.readFileSync("raw_data.txt", "utf8").split("\n").filter(Boolean);
          
          // Convert raw data to JSON
          const jsonData = data.map(line => {
            const fields = line.split(/\s+/); // Split by one or more spaces
            
            // Destructure and assign empty strings for missing values
            const [id = "", name = "", user_count = "", rating = "", version = ""] = fields;
            
            // Return as JSON object
            return {
              extension_id: id,
              name: name,
              user_count: user_count,
              rating: rating,
              version: version
            };
          });

          // Write JSON data to file
          fs.writeFileSync("../extension_data.json", JSON.stringify(jsonData, null, 2));

          // Convert JSON data to CSV
          const json2csv = require("json2csv").parse;
          const csvData = json2csv(jsonData);
          
          // Write CSV to file
          fs.writeFileSync("../extension_data.csv", csvData);
        '
        # Install json2csv library (can be done in dependencies or this step)
        npm install json2csv
    - name: Commit and push if changed
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add -A  # Stage all changes, including new and modified files
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update extension data")
        git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git
      env:
        PAT: ${{ secrets.PAT }}
